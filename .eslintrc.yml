root: true
env:
  browser: true
  es2021: true
  node: true
extends:
  - './.eslintrc.javascript.json'
  - plugin:import/typescript
  - 'plugin:@typescript-eslint/recommended'
parser: vue-eslint-parser
parserOptions:
  ecmaVersion: latest
  sourceType: module
  parser: '@typescript-eslint/parser'
  ecmaFeatures:
    jsx: true
    tsx: true
  vueFeatures:
    filter: true
    interpolationAsNonHTML: false
settings:
  import/resolver:
    typescript: true
    node: true

plugins:
  - '@typescript-eslint'

ignorePatterns:
  - '.vscode/**/*'
  - 'node_modules/**/*'
  # Build result
  - '/dist/**/*'
  - 'out/**/*'
  - 'build/**/*'
  - '**/unpackage/**/*'
rules:
  indent: off
  linebreak-style:
    - error
    - unix
  eqeqeq:
    - error
    - always
  quotes:
    - error
    - single
  semi:
    - error
    - never
  comma-dangle:
    - error
    - always-multiline
  no-mixed-spaces-and-tabs:
    - error
    - smart-tabs
  no-unused-vars: off
  '@typescript-eslint/no-unused-vars':
    - error
    - argsIgnorePattern: '^_'
      varsIgnorePattern: '^_'

  # Not intended but it is easier for api requesting
  '@typescript-eslint/no-explicit-any': off

  # TypeScript would do the checking
  import/no-unresolved: off

overrides:
  - files:
      - '**/*.ts'
      - '**/*.tsx'
    rules:
      '@typescript-eslint/no-unused-vars':
        - error
        - argsIgnorePattern: '^_'
          varsIgnorePattern: '^_'
      '@typescript-eslint/no-namespace': off

  - files:
      - '**/*.vue'
    globals:
      defineProps: readonly
      defineEmits: readonly
      defineExpose: readonly
    rules:
      '@typescript-eslint/no-unused-vars':
        - error
        # ignore variables started with '_' or exactly 'props'(used in vue)
        - varsIgnorePattern: (^_)|(^props$)
